{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "' 1-import the data 2-change the timespan to year and season 3-make a list of the b2b customers and create them\\na type 4-make the table and the plot if necassery try to plot it. 5-check the normality 6-check calculate and plot the correlation 7-calculate and scatter \\nlog and dfferent types of correlation'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# report owner marketing manager\n",
    "\n",
    "## steps tp be taken:\n",
    "''' 1-import the data 2-change the timespan to year and season 3-make a list of the b2b customers and create them\n",
    "a type 4-make the table and the plot if necassery try to plot it. 5-check the normality 6-check calculate and plot the correlation 7-calculate and scatter \n",
    "log and dfferent types of correlation'''\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing the packages\n",
    "import pandas as pd \n",
    "import numpy as np \n",
    "import jalali_pandas\n",
    "import matplotlib\n",
    "from scipy.stats import pearsonr \n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.pyplot import * \n",
    "from bidi.algorithm import get_display\n",
    "import arabic_reshaper\n",
    "import streamlit as st"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 73950 entries, 0 to 73949\n",
      "Data columns (total 10 columns):\n",
      " #   Column                      Non-Null Count  Dtype \n",
      "---  ------                      --------------  ----- \n",
      " 0   نام کالا                    73950 non-null  object\n",
      " 1   گروه کالا                   72000 non-null  object\n",
      " 2   Level_1                     72000 non-null  object\n",
      " 3   شماره کالا                  73950 non-null  object\n",
      " 4   کد خارجی                    73802 non-null  object\n",
      " 5   شماره فاکتور                73950 non-null  object\n",
      " 6   تاریخ فاکتور                73950 non-null  object\n",
      " 7   تعداد فروش                  73950 non-null  int64 \n",
      " 8   فروش خالص پس از کسر مرجوعی  73950 non-null  int64 \n",
      " 9   نام مشتری                   73950 non-null  object\n",
      "dtypes: int64(2), object(8)\n",
      "memory usage: 5.6+ MB\n"
     ]
    }
   ],
   "source": [
    "#read the data \n",
    "df = pd.read_excel(\"فروش_1400-05_تا_1403-03-08.xlsx\")\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>نام کالا</th>\n",
       "      <th>کد خارجی</th>\n",
       "      <th>گروه کالا</th>\n",
       "      <th>Level_1</th>\n",
       "      <th>تاریخ فاکتور</th>\n",
       "      <th>تعداد فروش</th>\n",
       "      <th>فروش خالص پس از کسر مرجوعی</th>\n",
       "      <th>نام مشتری</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>542</th>\n",
       "      <td>کلاغ سرامیکی پافلزی بزرگ - مشکی</td>\n",
       "      <td>1928-2</td>\n",
       "      <td>مجسمه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1400/05/31</td>\n",
       "      <td>1</td>\n",
       "      <td>4950000</td>\n",
       "      <td>مشتری گرامی پیام ولی</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>617</th>\n",
       "      <td>کلاغ سرامیکی پافلزی بزرگ - مشکی</td>\n",
       "      <td>1928-2</td>\n",
       "      <td>مجسمه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1400/05/31</td>\n",
       "      <td>1</td>\n",
       "      <td>4950000</td>\n",
       "      <td>مشتری گرامی پیام ولی</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>پیراهن و کمربند قلمکار دوپود</td>\n",
       "      <td>35875</td>\n",
       "      <td>پوشاک زنانه</td>\n",
       "      <td>مد و پوشاک</td>\n",
       "      <td>1400/06/22</td>\n",
       "      <td>1</td>\n",
       "      <td>8300000</td>\n",
       "      <td>جناب آقای میلاد کسماپور</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>پیراهن و کمربند قلمکار دوپود</td>\n",
       "      <td>35875</td>\n",
       "      <td>پوشاک زنانه</td>\n",
       "      <td>مد و پوشاک</td>\n",
       "      <td>1400/06/22</td>\n",
       "      <td>1</td>\n",
       "      <td>8300000</td>\n",
       "      <td>جناب آقای میلاد کسماپور</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2149</th>\n",
       "      <td>ظرف سرامیکی گرد لبه دار سایز 2 راستین - گل و س...</td>\n",
       "      <td>8922-1</td>\n",
       "      <td>ظرف</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1400/06/25</td>\n",
       "      <td>1</td>\n",
       "      <td>1450000</td>\n",
       "      <td>سرکار خانم غزاله زرنانی</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73773</th>\n",
       "      <td>ظرف سرامیکی-سایز 1 راستین- گل و ستاره</td>\n",
       "      <td>8921-1</td>\n",
       "      <td>ظرف</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403/03/05</td>\n",
       "      <td>1</td>\n",
       "      <td>2400000</td>\n",
       "      <td>دپارتمان استور روشا</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73774</th>\n",
       "      <td>کاسه سرامیکی سایز4  22-23 cm - چشم نظر ترکیبی</td>\n",
       "      <td>11689-A-5</td>\n",
       "      <td>کاسه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403/03/05</td>\n",
       "      <td>1</td>\n",
       "      <td>13750000</td>\n",
       "      <td>دپارتمان استور روشا</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73791</th>\n",
       "      <td>استول - پاف کتان بافته شده بزرگ - زرد</td>\n",
       "      <td>430-A-4</td>\n",
       "      <td>استول</td>\n",
       "      <td>مبلمان</td>\n",
       "      <td>1403/03/05</td>\n",
       "      <td>2</td>\n",
       "      <td>29000000</td>\n",
       "      <td>دپارتمان استور روشا</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73799</th>\n",
       "      <td>کاسه سرامیکی سایز4  22-23 cm - چشم نظر ترکیبی</td>\n",
       "      <td>11689-A-5</td>\n",
       "      <td>کاسه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403/03/05</td>\n",
       "      <td>1</td>\n",
       "      <td>13750000</td>\n",
       "      <td>دپارتمان استور روشا</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73837</th>\n",
       "      <td>ظرف سرامیکی-سایز 1 راستین- گل و ستاره</td>\n",
       "      <td>8921-1</td>\n",
       "      <td>ظرف</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403/03/05</td>\n",
       "      <td>1</td>\n",
       "      <td>2400000</td>\n",
       "      <td>دپارتمان استور روشا</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1226 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                نام کالا   کد خارجی  \\\n",
       "542                      کلاغ سرامیکی پافلزی بزرگ - مشکی     1928-2   \n",
       "617                      کلاغ سرامیکی پافلزی بزرگ - مشکی     1928-2   \n",
       "1993                        پیراهن و کمربند قلمکار دوپود      35875   \n",
       "1999                        پیراهن و کمربند قلمکار دوپود      35875   \n",
       "2149   ظرف سرامیکی گرد لبه دار سایز 2 راستین - گل و س...     8922-1   \n",
       "...                                                  ...        ...   \n",
       "73773              ظرف سرامیکی-سایز 1 راستین- گل و ستاره     8921-1   \n",
       "73774      کاسه سرامیکی سایز4  22-23 cm - چشم نظر ترکیبی  11689-A-5   \n",
       "73791              استول - پاف کتان بافته شده بزرگ - زرد    430-A-4   \n",
       "73799      کاسه سرامیکی سایز4  22-23 cm - چشم نظر ترکیبی  11689-A-5   \n",
       "73837              ظرف سرامیکی-سایز 1 راستین- گل و ستاره     8921-1   \n",
       "\n",
       "         گروه کالا      Level_1 تاریخ فاکتور  تعداد فروش  \\\n",
       "542          مجسمه  خانه و دکور   1400/05/31           1   \n",
       "617          مجسمه  خانه و دکور   1400/05/31           1   \n",
       "1993   پوشاک زنانه   مد و پوشاک   1400/06/22           1   \n",
       "1999   پوشاک زنانه   مد و پوشاک   1400/06/22           1   \n",
       "2149           ظرف  خانه و دکور   1400/06/25           1   \n",
       "...            ...          ...          ...         ...   \n",
       "73773          ظرف  خانه و دکور   1403/03/05           1   \n",
       "73774         کاسه  خانه و دکور   1403/03/05           1   \n",
       "73791        استول       مبلمان   1403/03/05           2   \n",
       "73799         کاسه  خانه و دکور   1403/03/05           1   \n",
       "73837          ظرف  خانه و دکور   1403/03/05           1   \n",
       "\n",
       "       فروش خالص پس از کسر مرجوعی                نام مشتری  \n",
       "542                       4950000     مشتری گرامی پیام ولی  \n",
       "617                       4950000     مشتری گرامی پیام ولی  \n",
       "1993                      8300000  جناب آقای میلاد کسماپور  \n",
       "1999                      8300000  جناب آقای میلاد کسماپور  \n",
       "2149                      1450000  سرکار خانم غزاله زرنانی  \n",
       "...                           ...                      ...  \n",
       "73773                     2400000      دپارتمان استور روشا  \n",
       "73774                    13750000      دپارتمان استور روشا  \n",
       "73791                    29000000      دپارتمان استور روشا  \n",
       "73799                    13750000      دپارتمان استور روشا  \n",
       "73837                     2400000      دپارتمان استور روشا  \n",
       "\n",
       "[1226 rows x 8 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#cleaning the data \n",
    "cleaning_data = df.copy()\n",
    "\n",
    "cleaning_data = cleaning_data[['نام کالا','کد خارجی', 'گروه کالا', 'Level_1',\n",
    "       'تاریخ فاکتور', 'تعداد فروش', \n",
    "       'فروش خالص پس از کسر مرجوعی', 'نام مشتری']]\n",
    "\n",
    "cleaning_data[cleaning_data['Level_1'].isna()]\n",
    "\n",
    "cleaning_data[cleaning_data.duplicated(subset=['نام کالا', 'کد خارجی', 'نام مشتری', 'تاریخ فاکتور', 'فروش خالص پس از کسر مرجوعی'],keep=False)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#create the feature seanon\n",
    "cleaning_data['تاریخ فاکتور'] = cleaning_data['تاریخ فاکتور'].jalali.parse_jalali(\"%Y/%m/%d\")\n",
    "\n",
    "cleaning_data['فصل'] = cleaning_data['تاریخ فاکتور'].jalali.quarter\n",
    "\n",
    "cleaning_data['سال'] = cleaning_data['تاریخ فاکتور'].jalali.year\n",
    "\n",
    "cleaning_data['ماه-سال'] = cleaning_data['سال'].astype(str) + '-' + cleaning_data['فصل'].astype(str)\n",
    "\n",
    "season_map = {1: \"بهار\", 2: \"تابستان\", 3: \"پاییز\", 4: \"زمستان\"}\n",
    "\n",
    "cleaning_data['فصل'] = cleaning_data['فصل'].replace(season_map)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0                        کاسه سرامیکی چشم طلا سایز 2 - چشم\n",
       "1                           ظرف سرامیکی برکه سایز 8 - قرمز\n",
       "2                           ظرف سرامیکی برکه سایز 6 - قرمز\n",
       "3                                     روسری  - روسری زمانی\n",
       "4                             بشقاب سرامیکی چشم طلا سایز 7\n",
       "                               ...                        \n",
       "73945            اسب سرامیکی طلایی (نیسا) نقش برجسته کوتاه\n",
       "73946    رومیزی پارچه ای دولایه سوزندوزی ابریشم بلوچستا...\n",
       "73947    پرنده فلزی - نقره کوب مشبک پابلند - تاج دار دم...\n",
       "73948    پرنده فلزی نقره کوب دم مشبک کوچک - تاج دار دم ...\n",
       "73949                          آینه سنگی مهراب طرح 2 زییین\n",
       "Name: نام کالا, Length: 73950, dtype: object"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#updating the department\n",
    "updating_data = cleaning_data.copy()\n",
    "\n",
    "updating_data['نام کالا']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#grouping the customers into B2C and B2B\n",
    "B2B = ['مشتری گرامی گالری دیدار', 'جناب آقای علی بردبار', 'جناب آقای  معماریان', 'جناب آقای محمد مهدی  فهلیانی', 'مشتری گرامی گالری دی زی', 'جناب آقای شایگان', 'سرکار خانم لیلی بهمن', 'جناب آقای Tubai Tappeti', 'جناب آقای امیر شکوری', 'جناب آقای مارکوس شریعت', 'مشتری گرامی Hana haji hassan', 'مشتری گرامی شرکت توسعه فن آوران بهین فردا چراغچی', 'جناب آقای بهرنگ انصاری پور', 'سرکار خانم راحله فخاری', 'جناب آقای افشین اسماعیلی']\n",
    "\n",
    "updating_data[updating_data['نام مشتری'].isin(B2B)]['نام مشتری'].unique()\n",
    "\n",
    "updating_data.loc[(updating_data['نام مشتری'].isin(B2B)) | (updating_data['نام مشتری'].str.contains('Hana haji')), 'نوع مشتری'] = 'B2B'\n",
    "\n",
    "updating_data['نوع مشتری'] = updating_data['نوع مشتری'].fillna('B2C')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#updating_data\n",
    "updating_data = updating_data.copy()\n",
    "\n",
    "updating_data = updating_data.rename(columns={\"Level_1\":\"دپارتمان\"})\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.set_option('display.max_rows', 10)\n",
    "\n",
    "updating_data[updating_data['دپارتمان'].isna()]\n",
    "\n",
    "updating_data.loc[updating_data['نام کالا']=='هزینه ارسال کالا', 'دپارتمان'] = 'خدمات'\n",
    "\n",
    "updating_data.loc[updating_data['نام کالا']=='تعمیرات', \"دپارتمان\"] = 'خدمات'\n",
    "\n",
    "updating_data.loc[updating_data['نام کالا']=='خدمات تعمیر کالا', 'دپارتمان'] = 'خدمات'\n",
    "\n",
    "\n",
    "decoration_variables = ['پرنده', 'انار', 'کاسه','ظرف','پارچه','پیش','دیس','مرغ','بشقاب','کلاغ',\n",
    "                        'مجسمه','کوسن','دیوارکوب','گلدان','تشک', 'خروس','آینه','فنجان','رانر',\n",
    "                        'زیر','رومیزی','قاشق','چنگال','قندان','کبوتر','زیربشقاب','لیوان','سینی',\n",
    "                        'نعلبکی','جعبه','نمکدان', 'گاو', 'اسب', 'دستمال','گلابی', 'کوزه', 'سبد', 'سفره', \n",
    "                        'شیر','شیشه','بطری', 'ماگ', 'سیب','لحاف', \"جاشمعی\", \"شکردان\", \"صابون\", \"کیسه\", \"اسفنکس\", \"تشک\", \"آباژور\"]\n",
    "\n",
    "updating_data.loc[(updating_data[\"نام کالا\"].str.contains(\"|\".join(decoration_variables)))&(updating_data['دپارتمان'].isna()), \"دپارتمان\"] = \"خانه و دکور\"\n",
    "\n",
    "fashion_variables =['کیف','بند','روسری','شال','کلاچ','گیوه','جواهرات','نشان', 'بادبزن', \"کلاه\",\"تیشرت\", \"گوشواره\", \"پوشاک\",\"بلوز\", \"پاپیون\", \"کفش\", \"روبان\", \"کت\", \"منگوله\", \"سویشرت\", \"کوله پشتی\", \"تی شرت\", \"عینک\", \"انگشتر\", \"سنجاق\", \"اسکارف\"\n",
    "                     ,\"حوله\", \"گل سینه\", \"النگو\", \"جلیقه\", \"مانتو\", \"تاپ\", \"گوشوراه\", \"کراس بادی\", \"شلوار\", \"آویز\", \"شانه\", \"جا شمعی\",\n",
    "                     \"پوشت\",\"دکمه\",\"سرآستین\"]\n",
    "\n",
    "updating_data.loc[(updating_data[\"نام کالا\"].str.contains(\"|\".join(fashion_variables)))&(updating_data['دپارتمان'].isna()), \"دپارتمان\"] = \"مد و پوشاک\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>نام کالا</th>\n",
       "      <th>کد خارجی</th>\n",
       "      <th>گروه کالا</th>\n",
       "      <th>دپارتمان</th>\n",
       "      <th>تاریخ فاکتور</th>\n",
       "      <th>تعداد فروش</th>\n",
       "      <th>فروش خالص پس از کسر مرجوعی</th>\n",
       "      <th>نام مشتری</th>\n",
       "      <th>فصل</th>\n",
       "      <th>سال</th>\n",
       "      <th>ماه-سال</th>\n",
       "      <th>نوع مشتری</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>کاسه سرامیکی چشم طلا سایز 2 - چشم</td>\n",
       "      <td>12672-2</td>\n",
       "      <td>کاسه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1400-05-13 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>3000000</td>\n",
       "      <td>مشتری گرامی میترا اصلانیان</td>\n",
       "      <td>تابستان</td>\n",
       "      <td>1400</td>\n",
       "      <td>1400-2</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ظرف سرامیکی برکه سایز 8 - قرمز</td>\n",
       "      <td>11891-3</td>\n",
       "      <td>ظرف</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1400-05-13 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2850000</td>\n",
       "      <td>سرکار خانم مهناز موسی خانی</td>\n",
       "      <td>تابستان</td>\n",
       "      <td>1400</td>\n",
       "      <td>1400-2</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ظرف سرامیکی برکه سایز 6 - قرمز</td>\n",
       "      <td>11510-4</td>\n",
       "      <td>ظرف</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1400-05-13 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>3500000</td>\n",
       "      <td>سرکار خانم مهناز موسی خانی</td>\n",
       "      <td>تابستان</td>\n",
       "      <td>1400</td>\n",
       "      <td>1400-2</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>روسری  - روسری زمانی</td>\n",
       "      <td>22493</td>\n",
       "      <td>شال و روسری</td>\n",
       "      <td>مد و پوشاک</td>\n",
       "      <td>1400-05-13 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>1950000</td>\n",
       "      <td>مشتری گرامی مهسا صادق</td>\n",
       "      <td>تابستان</td>\n",
       "      <td>1400</td>\n",
       "      <td>1400-2</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>بشقاب سرامیکی چشم طلا سایز 7</td>\n",
       "      <td>20909</td>\n",
       "      <td>بشقاب</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1400-05-13 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>10000000</td>\n",
       "      <td>سرکار خانم فاطمه کرد</td>\n",
       "      <td>تابستان</td>\n",
       "      <td>1400</td>\n",
       "      <td>1400-2</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73945</th>\n",
       "      <td>اسب سرامیکی طلایی (نیسا) نقش برجسته کوتاه</td>\n",
       "      <td>1569-2</td>\n",
       "      <td>مجسمه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403-03-07 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>65000000</td>\n",
       "      <td>جناب آقای محمدجواد مهدوی</td>\n",
       "      <td>بهار</td>\n",
       "      <td>1403</td>\n",
       "      <td>1403-1</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73946</th>\n",
       "      <td>رومیزی پارچه ای دولایه سوزندوزی ابریشم بلوچستا...</td>\n",
       "      <td>47002-3</td>\n",
       "      <td>رومیزی</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403-03-08 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>10800000</td>\n",
       "      <td>دپارتمان استور روشا</td>\n",
       "      <td>بهار</td>\n",
       "      <td>1403</td>\n",
       "      <td>1403-1</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73947</th>\n",
       "      <td>پرنده فلزی - نقره کوب مشبک پابلند - تاج دار دم...</td>\n",
       "      <td>21056-1</td>\n",
       "      <td>مجسمه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403-03-08 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>جناب آقای آرش حیدریان</td>\n",
       "      <td>بهار</td>\n",
       "      <td>1403</td>\n",
       "      <td>1403-1</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73948</th>\n",
       "      <td>پرنده فلزی نقره کوب دم مشبک کوچک - تاج دار دم ...</td>\n",
       "      <td>2134-1</td>\n",
       "      <td>مجسمه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403-03-08 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>جناب آقای آرش حیدریان</td>\n",
       "      <td>بهار</td>\n",
       "      <td>1403</td>\n",
       "      <td>1403-1</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73949</th>\n",
       "      <td>آینه سنگی مهراب طرح 2 زییین</td>\n",
       "      <td>37368-5</td>\n",
       "      <td>آینه</td>\n",
       "      <td>خانه و دکور</td>\n",
       "      <td>1403-03-08 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>جناب آقای آرش حیدریان</td>\n",
       "      <td>بهار</td>\n",
       "      <td>1403</td>\n",
       "      <td>1403-1</td>\n",
       "      <td>B2C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>73950 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                نام کالا کد خارجی  \\\n",
       "0                      کاسه سرامیکی چشم طلا سایز 2 - چشم  12672-2   \n",
       "1                         ظرف سرامیکی برکه سایز 8 - قرمز  11891-3   \n",
       "2                         ظرف سرامیکی برکه سایز 6 - قرمز  11510-4   \n",
       "3                                   روسری  - روسری زمانی    22493   \n",
       "4                           بشقاب سرامیکی چشم طلا سایز 7    20909   \n",
       "...                                                  ...      ...   \n",
       "73945          اسب سرامیکی طلایی (نیسا) نقش برجسته کوتاه   1569-2   \n",
       "73946  رومیزی پارچه ای دولایه سوزندوزی ابریشم بلوچستا...  47002-3   \n",
       "73947  پرنده فلزی - نقره کوب مشبک پابلند - تاج دار دم...  21056-1   \n",
       "73948  پرنده فلزی نقره کوب دم مشبک کوچک - تاج دار دم ...   2134-1   \n",
       "73949                        آینه سنگی مهراب طرح 2 زییین  37368-5   \n",
       "\n",
       "         گروه کالا     دپارتمان         تاریخ فاکتور  تعداد فروش  \\\n",
       "0             کاسه  خانه و دکور  1400-05-13 00:00:00           1   \n",
       "1              ظرف  خانه و دکور  1400-05-13 00:00:00           1   \n",
       "2              ظرف  خانه و دکور  1400-05-13 00:00:00           1   \n",
       "3      شال و روسری   مد و پوشاک  1400-05-13 00:00:00           1   \n",
       "4            بشقاب  خانه و دکور  1400-05-13 00:00:00           1   \n",
       "...            ...          ...                  ...         ...   \n",
       "73945        مجسمه  خانه و دکور  1403-03-07 00:00:00           1   \n",
       "73946       رومیزی  خانه و دکور  1403-03-08 00:00:00           1   \n",
       "73947        مجسمه  خانه و دکور  1403-03-08 00:00:00           1   \n",
       "73948        مجسمه  خانه و دکور  1403-03-08 00:00:00           1   \n",
       "73949         آینه  خانه و دکور  1403-03-08 00:00:00           1   \n",
       "\n",
       "       فروش خالص پس از کسر مرجوعی                   نام مشتری      فصل   سال  \\\n",
       "0                         3000000  مشتری گرامی میترا اصلانیان  تابستان  1400   \n",
       "1                         2850000  سرکار خانم مهناز موسی خانی  تابستان  1400   \n",
       "2                         3500000  سرکار خانم مهناز موسی خانی  تابستان  1400   \n",
       "3                         1950000       مشتری گرامی مهسا صادق  تابستان  1400   \n",
       "4                        10000000        سرکار خانم فاطمه کرد  تابستان  1400   \n",
       "...                           ...                         ...      ...   ...   \n",
       "73945                    65000000    جناب آقای محمدجواد مهدوی     بهار  1403   \n",
       "73946                    10800000         دپارتمان استور روشا     بهار  1403   \n",
       "73947                           0       جناب آقای آرش حیدریان     بهار  1403   \n",
       "73948                           0       جناب آقای آرش حیدریان     بهار  1403   \n",
       "73949                           0       جناب آقای آرش حیدریان     بهار  1403   \n",
       "\n",
       "      ماه-سال نوع مشتری  \n",
       "0      1400-2       B2C  \n",
       "1      1400-2       B2C  \n",
       "2      1400-2       B2C  \n",
       "3      1400-2       B2C  \n",
       "4      1400-2       B2C  \n",
       "...       ...       ...  \n",
       "73945  1403-1       B2C  \n",
       "73946  1403-1       B2C  \n",
       "73947  1403-1       B2C  \n",
       "73948  1403-1       B2C  \n",
       "73949  1403-1       B2C  \n",
       "\n",
       "[73950 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "updating_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "B2BB2C_price = updating_data.groupby(['ماه-سال', 'نوع مشتری'])['فروش خالص پس از کسر مرجوعی'].sum().reset_index()\n",
    "\n",
    "B2BB2C_count = updating_data.groupby(['ماه-سال', 'نوع مشتری'])['تعداد فروش'].sum().reset_index()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "B2B_count = B2BB2C_count[B2BB2C_count['نوع مشتری']==\"B2B\"][\"تعداد فروش\"]\n",
    "\n",
    "B2C_count = B2BB2C_count[B2BB2C_count['نوع مشتری']==\"B2C\"][\"تعداد فروش\"]\n",
    "\n",
    "B2C_price = B2BB2C_price[B2BB2C_price['نوع مشتری']==\"B2C\"]\n",
    "\n",
    "B2B_price = B2BB2C_price[B2BB2C_price['نوع مشتری']==\"B2B\"]\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PearsonRResult(statistic=0.36088183503196186, pvalue=0.24912656889581125)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pearsonr(B2B_count, B2C_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x204039ef890>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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Mt/85jfNokWLjDHGNDY2moEDB5pXXnnFqj1y5IiRZEpKSowxxrzxxhsmKirKeL1eq6agoMC4XC7T0tJijDHmkUceMdddd13QZ959990mOzu72330+XxGkvH5fBc7TAAA0Mu6+/3dY0dyFixYoGnTpikrKytoe3l5uVpbW4O2jxkzRiNHjlRJSYkkqaSkRGPHjlViYqJVk52dLb/fr8OHD1s1X33v7Oxs6z0609LSIr/fH/QAAAD21CM/6/Diiy9q37592rNnT4c2r9ermJgYxcXFBW1PTEyU1+u1as4OOO3t7W3nqvH7/friiy80aNCgDp+9Zs0a5efnX/S4AABA5Aj5kZzjx49r0aJFev755+V0Os//gl60fPly+Xw+63H8+PFwdwkAAPSQkIec8vJy1dfXa9y4cRowYIAGDBigt956S0888YQGDBigxMREffnll2psbAx6XV1dnTwejyTJ4/F0uNqq/fn5alwuV6dHcSQpNjZWLpcr6AEAAOwp5CFnypQpOnTokCoqKqzH+PHjlZeXZ/154MCB2rFjh/Wa6upqHTt2TJmZmZKkzMxMHTp0SPX19VZNUVGRXC6X0tLSrJqz36O9pv09AABA/xbyc3KGDh2q9PT0oG2DBw/W8OHDre1z5szRkiVLFB8fL5fLpR/84AfKzMzULbfcIkmaOnWq0tLSdO+992rdunXyer3653/+Zy1YsECxsbGSpAceeEC/+tWv9Mgjj+j73/++du7cqZdfflnbt28P9ZAAAEAE6pETj8/nl7/8paKionTnnXeqpaVF2dnZevrpp6326Ohobdu2TfPnz1dmZqYGDx6s2bNn68c//rFVk5qaqu3bt+vBBx/Uhg0bdPnll+s3v/mNsrOzwzEkAADQxziMMSbcnQgXv98vt9stn8/H+TkAAESI7n5/89tVAADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgg5AADAlgaEuwN20xYwKqtpUH1TsxKGOjUhNV7RUY5wdwsAgH6HkBNChZW1yt9apVpfs7Utye3Uqtw05aQnhbFnAAD0PyxXhUhhZa3mb9oXFHAkyetr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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 6\n",
    "#create scatter \n",
    "plt.scatter(B2B_count, B2C_count)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\quera\\Lib\\site-packages\\pandas\\core\\arraylike.py:399: RuntimeWarning: divide by zero encountered in log\n",
      "  result = getattr(ufunc, method)(*inputs, **kwargs)\n",
      "c:\\quera\\Lib\\site-packages\\pandas\\core\\arraylike.py:399: RuntimeWarning: invalid value encountered in log\n",
      "  result = getattr(ufunc, method)(*inputs, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "total_sales_log = np.log(updating_data['فروش خالص پس از کسر مرجوعی']).diff()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(B2B_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3546 81 1440.8333333333333 906.1573045592364 60.21373514931837\n"
     ]
    }
   ],
   "source": [
    "print(B2B_count.max(), B2B_count.min(), B2B_count.mean(), B2B_count.std(), np.std(B2B_count)/ np.mean(B2B_count)*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12811 3016 7355.583333333333 2649.9433427333815 34.49254090907883\n"
     ]
    }
   ],
   "source": [
    "print(B2C_count.max(), B2C_count.min(), B2C_count.mean(), B2C_count.std(), np.std(B2C_count)/np.mean(B2C_count)*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(B2C_count)\n",
    "plt.ylabel(font)\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(B2C_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(B2C_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_farsi_text(x):\n",
    "      reshaped_text = arabic_reshaper.reshape(x)\n",
    "      farsi_text = get_display(reshaped_text)\n",
    "      return farsi_text\n",
    "\n",
    "font_title = {'family': 'B Farnaz',\n",
    "'color': 'red',\n",
    "'weight': 'normal',\n",
    "'size': 30,\n",
    "}\n",
    "\n",
    "font_labels = {'family': 'B Nazanin',\n",
    "'color': 'black',\n",
    "'weight': 'normal',\n",
    "'size': 20,\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "font = make_farsi_text('')\n",
    "xticks()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-06-07 14:33:38.330 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run c:\\quera\\Lib\\site-packages\\ipykernel_launcher.py [ARGUMENTS]\n"
     ]
    }
   ],
   "source": [
    "st.write('wow')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "quera",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
